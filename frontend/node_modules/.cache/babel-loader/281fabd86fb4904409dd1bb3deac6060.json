{"ast":null,"code":"const initialState = {\n  products: [],\n  address: [],\n  discount: 0,\n  delivery: 0\n};\nexport default ((state = initialState, action) => {\n  let products = [...state.products];\n\n  switch (action.type) {\n    case 'ADD_PRODUCT':\n      let id = action.payload.data.id;\n      let index = products.findIndex(item => item.id === id);\n\n      if (index > -1) {\n        products[index].quantity += action.payload.quantity;\n      } else {\n        products.push({ ...action.payload.data,\n          quantity: action.payload.quantity\n        });\n      }\n\n      return { ...state,\n        products\n      };\n      break;\n\n    case 'CHANGE_PRODUCT':\n      let products = [...state.products];\n\n      if (products[action.payload.key]) {\n        switch (action.payload.type) {\n          case '-':\n            products[action.payload.key].quantity--;\n            break;\n\n          case '+':\n            products[action.payload.key].quantity++;\n            break;\n        }\n      }\n\n      return { ...state,\n        products\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/var/www/devsFood/frontend/src/reducers/CartReducer.js"],"names":["initialState","products","address","discount","delivery","state","action","type","id","payload","data","index","findIndex","item","quantity","push","key"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,QAAQ,EAAE,CAHO;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAE7C,MAAIL,QAAQ,GAAG,CAAC,GAAGI,KAAK,CAACJ,QAAV,CAAf;;AAEA,UAAOK,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AAEI,UAAIC,EAAE,GAAGF,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBF,EAA7B;AACA,UAAIG,KAAK,GAAGV,QAAQ,CAACW,SAAT,CAAmBC,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAvC,CAAZ;;AAEA,UAAGG,KAAK,GAAG,CAAC,CAAZ,EAAc;AACVV,QAAAA,QAAQ,CAACU,KAAD,CAAR,CAAgBG,QAAhB,IAA4BR,MAAM,CAACG,OAAP,CAAeK,QAA3C;AACH,OAFD,MAEK;AACDb,QAAAA,QAAQ,CAACc,IAAT,CAAc,EACV,GAAGT,MAAM,CAACG,OAAP,CAAeC,IADR;AAEVI,UAAAA,QAAQ,EAAER,MAAM,CAACG,OAAP,CAAeK;AAFf,SAAd;AAIH;;AAED,aAAO,EAAC,GAAGT,KAAJ;AAAWJ,QAAAA;AAAX,OAAP;AACJ;;AACA,SAAK,gBAAL;AACI,UAAIA,QAAQ,GAAG,CAAC,GAAGI,KAAK,CAACJ,QAAV,CAAf;;AAEA,UAAGA,QAAQ,CAACK,MAAM,CAACG,OAAP,CAAeO,GAAhB,CAAX,EAAgC;AAC5B,gBAAOV,MAAM,CAACG,OAAP,CAAeF,IAAtB;AACI,eAAK,GAAL;AACIN,YAAAA,QAAQ,CAACK,MAAM,CAACG,OAAP,CAAeO,GAAhB,CAAR,CAA6BF,QAA7B;AAEJ;;AACA,eAAK,GAAL;AACIb,YAAAA,QAAQ,CAACK,MAAM,CAACG,OAAP,CAAeO,GAAhB,CAAR,CAA6BF,QAA7B;AACJ;AAPJ;AASH;;AACD,aAAO,EAAC,GAAGT,KAAJ;AAAWJ,QAAAA;AAAX,OAAP;AACJ;AAhCJ;;AAmCA,SAAOI,KAAP;AACH,CAxCD","sourcesContent":["const initialState = {\n    products: [],\n    address: [],\n    discount: 0,\n    delivery: 0\n};\n\nexport default (state = initialState, action) => {\n    \n    let products = [...state.products];\n    \n    switch(action.type) {\n        case 'ADD_PRODUCT':\n            \n            let id = action.payload.data.id;\n            let index = products.findIndex(item => item.id === id);\n\n            if(index > -1){\n                products[index].quantity += action.payload.quantity;\n            }else{\n                products.push({\n                    ...action.payload.data,\n                    quantity: action.payload.quantity\n                });\n            }\n\n            return {...state, products};\n        break;\n        case 'CHANGE_PRODUCT':\n            let products = [...state.products];\n\n            if(products[action.payload.key]){\n                switch(action.payload.type){\n                    case '-':\n                        products[action.payload.key].quantity--;\n\n                    break;\n                    case '+':\n                        products[action.payload.key].quantity++;\n                    break;\n                }            \n            }\n            return {...state, products};\n        break;\n    }\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}