{"ast":null,"code":"var _jsxFileName = \"/var/www/devsFood/frontend/src/pages/HomeScreen/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Container, CategoryArea, CategoryList, ProductArea, ProductList, ProductPaginationArea, ProductPaginationItem } from './styled';\nimport ReactTooltip from 'react-tooltip';\nimport Header from '../../components/Header';\nimport CategoryItem from '../../components/CategoryItem';\nimport ProductItem from '../../components/ProductItem';\nimport Modal from '../../components/Modal';\nimport ModalProduct from '../../components/ModalProduct';\nimport api from '../../api';\nlet searchTimer = null;\nexport default (() => {\n  const history = useHistory();\n  const [headerSearch, setHeaderSearch] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [modalStatus, setModalStatus] = useState(false);\n  const [modalData, setModalData] = useState({});\n  const [activeCategory, setActiveCategory] = useState(0);\n  const [activePage, setActivePage] = useState(1);\n  const [activeSearch, setActiveSearch] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  const [products, setProducts] = useState([]); // INICIO - Pegar os produtos que estão na base através da API, pasando também os filtros se necessários\n\n  const getProducts = async () => {\n    const prods = await api.getProducts(activeCategory, activePage, activeSearch);\n\n    if (prods.error == '') {\n      setProducts(prods.result.data);\n      setTotalPages(prods.result.pages);\n      setActivePage(prods.result.page);\n    }\n  };\n\n  const handleProductClick = () => {\n    setModalStatus(true);\n    alert('asdasdad');\n  }; // FIM - Pegar os produtos que estão na base através da API, pasando também os filtros se necessários\n  // INICIO - Responsável por usar API para buscar as categorias cadastradas\n\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const cat = await api.getCategories();\n\n      if (cat.error == '') {\n        setCategories(cat.result);\n      }\n\n      ReactTooltip.rebuild();\n    };\n\n    getCategories();\n  }, []); // FIM - Responsável por usar API para buscar as categorias cadastradas\n  // INICIO - Fica observando se os campos das categorias, filtro ou a paginação estão sendo clicado se sim ele zera o array com as informações do produtos e coloca novamento\n\n  useEffect(() => {\n    setProducts([]);\n    getProducts();\n  }, [activeCategory, activePage, activeSearch]); // FIM - Fica observando se os campos das categorias, filtro ou a paginação estão sendo clicado se sim ele zera o array com as informações do produtos e coloca novamento\n  //INICIO Faz o controle para quando clicar em alguma categoria vai apagar o que estiver no filtro e fecha-lo\n\n  useEffect(() => {\n    setActiveSearch('');\n    setHeaderSearch('');\n  }, [activeCategory]); //FIM Faz o controle para quando clicar em alguma categoria vai apagar o que estiver no filtro e fecha-lo\n  // INICIO - Toda fez que o usuário fizer uma pesquisa tem um tempo de 2 segundos para fazer a requisição, assim só vamos fazer uma requisição por vez\n\n  useEffect(() => {\n    clearTimeout(searchTimer);\n    searchTimer = setTimeout(() => {\n      setActiveSearch(headerSearch);\n    }, 2000);\n  }, [headerSearch]); // FIM - Toda fez que o usuário fizer uma pesquisa tem um tempo de 2 segundos para fazer a requisição, assim só vamos fazer uma requisição por vez\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    closeSearch: \"off\",\n    search: headerSearch,\n    onSearch: setHeaderSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), categories.length > 0 && /*#__PURE__*/React.createElement(CategoryArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Selecione as Categorias\", /*#__PURE__*/React.createElement(CategoryList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CategoryItem, {\n    data: {\n      id: 0,\n      name: 'Todas as categorias',\n      image: '/assets/food-and-restaurant.png'\n    },\n    activeCategory: activeCategory,\n    setActiveCategory: setActiveCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }), categories.map((item, index) => /*#__PURE__*/React.createElement(CategoryItem, {\n    key: index,\n    data: item,\n    activeCategory: activeCategory,\n    setActiveCategory: setActiveCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  })))), products.length > 0 && /*#__PURE__*/React.createElement(ProductArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProductList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, products.map((item, index) => /*#__PURE__*/React.createElement(ProductItem, {\n    key: index,\n    data: item,\n    onClick: handleProductClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  })))), totalPages > 0 && /*#__PURE__*/React.createElement(ProductPaginationArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, Array(totalPages).fill(0).map((item, index) => /*#__PURE__*/React.createElement(ProductPaginationItem, {\n    key: index,\n    active: activePage,\n    current: index + 1,\n    onClick: () => setActivePage(index + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, index + 1))), /*#__PURE__*/React.createElement(Modal, {\n    status: modalStatus,\n    setStatus: setModalStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalProduct, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })));\n});","map":{"version":3,"sources":["/var/www/devsFood/frontend/src/pages/HomeScreen/index.js"],"names":["React","useState","useEffect","useHistory","Container","CategoryArea","CategoryList","ProductArea","ProductList","ProductPaginationArea","ProductPaginationItem","ReactTooltip","Header","CategoryItem","ProductItem","Modal","ModalProduct","api","searchTimer","history","headerSearch","setHeaderSearch","categories","setCategories","modalStatus","setModalStatus","modalData","setModalData","activeCategory","setActiveCategory","activePage","setActivePage","activeSearch","setActiveSearch","totalPages","setTotalPages","products","setProducts","getProducts","prods","error","result","data","pages","page","handleProductClick","alert","getCategories","cat","rebuild","clearTimeout","setTimeout","length","id","name","image","map","item","index","Array","fill"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACIC,SADJ,EAEIC,YAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,WALJ,EAMIC,qBANJ,EAOIC,qBAPJ,QAQO,UARP;AASA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AAGA,IAAIC,WAAW,GAAG,IAAlB;AAEA,gBAAe,MAAM;AACjB,QAAMC,OAAO,GAAGhB,UAAU,EAA1B;AAEA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAAC2B,cAAD,EAAiBC,iBAAjB,IAAsC5B,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAAC6B,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,EAAD,CAAhD;AAGA,QAAM,CAACiC,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACmC,QAAD,EAAWC,WAAX,IAA0BpC,QAAQ,CAAC,EAAD,CAAxC,CAfiB,CAkBjB;;AACA,QAAMqC,WAAW,GAAG,YAAW;AAC3B,UAAMC,KAAK,GAAG,MAAMtB,GAAG,CAACqB,WAAJ,CAAgBV,cAAhB,EAAgCE,UAAhC,EAA4CE,YAA5C,CAApB;;AAEA,QAAGO,KAAK,CAACC,KAAN,IAAe,EAAlB,EAAqB;AACjBH,MAAAA,WAAW,CAACE,KAAK,CAACE,MAAN,CAAaC,IAAd,CAAX;AACAP,MAAAA,aAAa,CAACI,KAAK,CAACE,MAAN,CAAaE,KAAd,CAAb;AACAZ,MAAAA,aAAa,CAACQ,KAAK,CAACE,MAAN,CAAaG,IAAd,CAAb;AACH;AACJ,GARD;;AAUA,QAAMC,kBAAkB,GAAG,MAAK;AAC5BpB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAqB,IAAAA,KAAK,CAAC,UAAD,CAAL;AACH,GAHD,CA7BiB,CAkCjB;AAEA;;;AACA5C,EAAAA,SAAS,CAAC,MAAK;AACX,UAAM6C,aAAa,GAAG,YAAW;AAC7B,YAAMC,GAAG,GAAI,MAAM/B,GAAG,CAAC8B,aAAJ,EAAnB;;AAEA,UAAGC,GAAG,CAACR,KAAJ,IAAa,EAAhB,EAAmB;AACfjB,QAAAA,aAAa,CAACyB,GAAG,CAACP,MAAL,CAAb;AACH;;AACD9B,MAAAA,YAAY,CAACsC,OAAb;AACH,KAPD;;AAQAF,IAAAA,aAAa;AAChB,GAVQ,EAUN,EAVM,CAAT,CArCiB,CAgDjB;AAEA;;AACA7C,EAAAA,SAAS,CAAC,MAAM;AACZmC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,IAAAA,WAAW;AACd,GAHQ,EAGN,CAACV,cAAD,EAAiBE,UAAjB,EAA6BE,YAA7B,CAHM,CAAT,CAnDiB,CAuDjB;AAEA;;AACA9B,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAZ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAHQ,EAGN,CAACO,cAAD,CAHM,CAAT,CA1DiB,CA8DjB;AAEA;;AACA1B,EAAAA,SAAS,CAAC,MAAK;AACXgD,IAAAA,YAAY,CAAChC,WAAD,CAAZ;AACAA,IAAAA,WAAW,GAAGiC,UAAU,CAAC,MAAK;AAC1BlB,MAAAA,eAAe,CAACb,YAAD,CAAf;AACH,KAFuB,EAErB,IAFqB,CAAxB;AAGH,GALQ,EAKP,CAACA,YAAD,CALO,CAAT,CAjEiB,CAuEjB;;AAIA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAS,IAAA,WAAW,EAAE,KAAtB;AAA4B,IAAA,MAAM,EAAEA,YAApC;AAAkD,IAAA,QAAQ,EAAEC,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGKC,UAAU,CAAC8B,MAAX,GAAoB,CAApB,iBACG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAI;AACJC,MAAAA,EAAE,EAAC,CADC;AAEJC,MAAAA,IAAI,EAAC,qBAFD;AAGJC,MAAAA,KAAK,EAAC;AAHF,KADZ;AAMI,IAAA,cAAc,EAAE3B,cANpB;AAOI,IAAA,iBAAiB,EAAEC,iBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAWKP,UAAU,CAACkC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACZ,oBAAC,YAAD;AACI,IAAA,GAAG,EAAIA,KADX;AAEI,IAAA,IAAI,EAAID,IAFZ;AAGI,IAAA,cAAc,EAAE7B,cAHpB;AAII,IAAA,iBAAiB,EAAEC,iBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAXL,CAFJ,CAJR,EA8BKO,QAAQ,CAACgB,MAAT,GAAkB,CAAlB,iBACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,QAAQ,CAACoB,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACV,oBAAC,WAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,IAAI,EAAED,IAFV;AAGI,IAAA,OAAO,EAAEZ,kBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ,CA/BR,EA6CKX,UAAU,GAAG,CAAb,iBACG,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSyB,KAAK,CAACzB,UAAD,CAAL,CAAkB0B,IAAlB,CAAuB,CAAvB,EAA0BJ,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,kBAC3B,oBAAC,qBAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,MAAM,EAAE5B,UAFZ;AAGI,IAAA,OAAO,EAAE4B,KAAK,GAAG,CAHrB;AAII,IAAA,OAAO,EAAE,MAAM3B,aAAa,CAAC2B,KAAK,GAAG,CAAT,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKA,KAAK,GAAG,CANb,CADH,CADT,CA9CR,eA6DI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAElC,WAAf;AAA4B,IAAA,SAAS,EAAEC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA7DJ,CADJ;AAsEH,CAjJD","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { \r\n    Container, \r\n    CategoryArea, \r\n    CategoryList, \r\n    ProductArea, \r\n    ProductList,\r\n    ProductPaginationArea,\r\n    ProductPaginationItem \r\n} from './styled';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport Header from '../../components/Header';\r\nimport CategoryItem from '../../components/CategoryItem';\r\nimport ProductItem from '../../components/ProductItem';\r\nimport Modal from '../../components/Modal';\r\nimport ModalProduct from '../../components/ModalProduct';\r\n\r\nimport api from '../../api';\r\n\r\n\r\nlet searchTimer = null;\r\n\r\nexport default () => {\r\n    const history = useHistory();\r\n\r\n    const [headerSearch, setHeaderSearch] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const [modalStatus, setModalStatus] = useState(false);\r\n    const [modalData, setModalData] = useState({});\r\n    \r\n    const [activeCategory, setActiveCategory] = useState(0);\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [activeSearch, setActiveSearch] = useState('');\r\n    \r\n\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [products, setProducts] = useState([]);\r\n    \r\n\r\n    // INICIO - Pegar os produtos que estão na base através da API, pasando também os filtros se necessários\r\n    const getProducts = async () =>{\r\n        const prods = await api.getProducts(activeCategory, activePage, activeSearch);\r\n\r\n        if(prods.error == ''){\r\n            setProducts(prods.result.data);\r\n            setTotalPages(prods.result.pages);\r\n            setActivePage(prods.result.page);\r\n        }\r\n    }\r\n\r\n    const handleProductClick = () =>{\r\n        setModalStatus(true);\r\n        alert('asdasdad')\r\n    }\r\n\r\n    // FIM - Pegar os produtos que estão na base através da API, pasando também os filtros se necessários\r\n\r\n    // INICIO - Responsável por usar API para buscar as categorias cadastradas\r\n    useEffect(() =>{\r\n        const getCategories = async () =>{\r\n            const cat =  await api.getCategories();        \r\n            \r\n            if(cat.error == ''){\r\n                setCategories(cat.result);\r\n            }\r\n            ReactTooltip.rebuild();\r\n        }\r\n        getCategories();\r\n    }, []); \r\n    // FIM - Responsável por usar API para buscar as categorias cadastradas\r\n\r\n    // INICIO - Fica observando se os campos das categorias, filtro ou a paginação estão sendo clicado se sim ele zera o array com as informações do produtos e coloca novamento\r\n    useEffect(() => {\r\n        setProducts([]);\r\n        getProducts();\r\n    }, [activeCategory, activePage, activeSearch]);\r\n    // FIM - Fica observando se os campos das categorias, filtro ou a paginação estão sendo clicado se sim ele zera o array com as informações do produtos e coloca novamento\r\n\r\n    //INICIO Faz o controle para quando clicar em alguma categoria vai apagar o que estiver no filtro e fecha-lo\r\n    useEffect(() => {\r\n        setActiveSearch('');\r\n        setHeaderSearch('');\r\n    }, [activeCategory]);\r\n    //FIM Faz o controle para quando clicar em alguma categoria vai apagar o que estiver no filtro e fecha-lo\r\n\r\n    // INICIO - Toda fez que o usuário fizer uma pesquisa tem um tempo de 2 segundos para fazer a requisição, assim só vamos fazer uma requisição por vez\r\n    useEffect(() =>{\r\n        clearTimeout(searchTimer);\r\n        searchTimer = setTimeout(() =>{\r\n            setActiveSearch(headerSearch);\r\n        }, 2000);\r\n    },[headerSearch]);\r\n    // FIM - Toda fez que o usuário fizer uma pesquisa tem um tempo de 2 segundos para fazer a requisição, assim só vamos fazer uma requisição por vez\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Header  closeSearch= 'off' search={headerSearch} onSearch={setHeaderSearch}/>\r\n\r\n            {categories.length > 0 &&\r\n                <CategoryArea>\r\n                    Selecione as Categorias\r\n                    <CategoryList>\r\n                        <CategoryItem \r\n                            data = {{\r\n                                id:0,\r\n                                name:'Todas as categorias',\r\n                                image:'/assets/food-and-restaurant.png'\r\n                            }}\r\n                            activeCategory={activeCategory}\r\n                            setActiveCategory={setActiveCategory}\r\n                        />\r\n\r\n                        {categories.map((item, index) =>(\r\n                            <CategoryItem \r\n                                key = {index}\r\n                                data = {item}\r\n                                activeCategory={activeCategory}\r\n                                setActiveCategory={setActiveCategory}\r\n                            />\r\n                        ))}\r\n                        \r\n\r\n                    </CategoryList>\r\n                </CategoryArea>\r\n            }\r\n            {products.length > 0 &&\r\n                <ProductArea>\r\n                    <ProductList>\r\n                        {products.map((item, index) =>(\r\n                            <ProductItem \r\n                                key={index}\r\n                                data={item}\r\n                                onClick={handleProductClick}\r\n                            />               \r\n                        ))}\r\n                    </ProductList>\r\n                </ProductArea>\r\n            }\r\n\r\n            {/*INICIO Conteúdo responsável pela paginação da pagina */}\r\n            {totalPages > 0 &&\r\n                <ProductPaginationArea>\r\n                        {Array(totalPages).fill(0).map((item, index) =>(\r\n                            <ProductPaginationItem \r\n                                key={index} \r\n                                active={activePage}\r\n                                current={index + 1}\r\n                                onClick={() => setActivePage(index + 1)}\r\n                            >\r\n                                {index + 1}\r\n                            </ProductPaginationItem>\r\n                        ))}\r\n                </ProductPaginationArea>\r\n            }\r\n            {/*FIM Conteúdo responsável pela paginação da pagina */}\r\n\r\n            <Modal status={modalStatus} setStatus={setModalStatus}>\r\n                <ModalProduct>\r\n                    \r\n                </ModalProduct>\r\n            </Modal>\r\n\r\n        </Container>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}